{-
  Generated by 'genRules' (automatic rule generation for DrIFT). Don't touch!!
  dependency files: Haskell/Hatchet/AnnotatedHsSyn.hs Haskell/Hatchet/MultiModuleBasics.hs Haskell/Hatchet/HsSyn.hs Haskell/Hatchet/AnnotatedHsSyn.hs Haskell/Hatchet/MultiModuleBasics.hs Haskell/Hatchet/Representation.hs Haskell/Hatchet/Class.hs Haskell/Hatchet/KindInference.hs Haskell/Hatchet/Env.hs
-}

module Haskell.ATC_Haskell where

import CASL.ATC_CASL
import Common.ATerm.Lib
import Haskell.Hatchet.DependAnalysis
import Haskell.Hatchet.HsPretty
import Haskell.Hatchet.Type
import Haskell.Hatchet.TypeUtils
import Haskell.Hatchet.TypeSynonyms
import Haskell.Hatchet.Utils
import List
import qualified Haskell.Hatchet.Utils as Utils
import Haskell.Hatchet.PPrint
import Haskell.Hatchet.HsSyn
import Haskell.Hatchet.Representation
import Haskell.Hatchet.Rename
import Haskell.Hatchet.ParseLib
import Haskell.Hatchet.Class
import Haskell.Hatchet.FiniteMaps
import Haskell.Hatchet.KindInference
import Haskell.Hatchet.Env
import Haskell.Hatchet.MultiModuleBasics
import Haskell.Hatchet.AnnotatedHsSyn


import Haskell.Hatchet.FiniteMaps

{-| Exclude: State |-}
{-| Exclude: Binding |-}
{-| Exclude: VarName |-}
{-| Exclude: KI |-}
{-| Exclude: Qual |-}
{-| Exclude: Assump |-}

instance ATermConvertible Assump where
    toShATerm att0 (an :>: s) =
	let (att1,an') = toShATerm att0 an
	    (att2,s') = toShATerm att1 s 
	    lat = [an',s']
	in addATerm (ShAAppl "Assump_"  lat []) att0
    fromShATerm att =
	case aterm of
	    (ShAAppl "Assump_" [an',s' ] _) ->
		let an = fromShATerm (getATermByIndex1 an' att)
		    s  = fromShATerm (getATermByIndex1 s' att)
	        in (an :>: s)
	    u -> fromShATermError "Assump" u
	where
	    aterm = getATerm att
    fromATerm _ = error "function \"fromATerm\" not derived (implemented) for data type \"Assump\""
    toATerm _ = error "function \"toATerm\" not derived (implemented) for data type \"Assump\""

instance (ATermConvertible a) => ATermConvertible (Qual a) where
    toShATerm att0 (p :=> t) =
	let (att1,p') = toShATerm att0 p
	    (att2,t') = toShATerm att1 t 
	    lat = [p',t']
	in addATerm (ShAAppl "Qual_"  lat []) att0
    fromShATerm att =
	case aterm of
	    (ShAAppl "Qual_" [an',s' ] _) ->
		let an = fromShATerm (getATermByIndex1 an' att)
		    s  = fromShATerm (getATermByIndex1 s' att)
	        in (an :=> s)
	    u -> fromShATermError "Qual" u
	where
	    aterm = getATerm att
    fromATerm _ = error "function \"fromATerm\" not derived (implemented) for data type \"Qual\""
    toATerm _ = error "function \"toATerm\" not derived (implemented) for data type \"Qual\""


instance (Ord a, ATermConvertible a, ATermConvertible b) => 
    ATermConvertible (FiniteMap a b) where
    toShATerm att fm = toShATerm att $ toListFM fm 
    fromShATerm att  = listToFM $ fromShATerm att
    fromATerm _ = error "function \"fromATerm\" not derived (implemented) for data type \"FiniteMap\""
    toATerm _ = error "function \"toATerm\" not derived (implemented) for data type \"FiniteMap\""

{-! for Scheme derive : ShATermConvertible !-}
{-! for Pred derive : ShATermConvertible !-}
{-! for Kindvar derive : ShATermConvertible !-}
{-! for Kind derive : ShATermConvertible !-}
{-! for Tycon derive : ShATermConvertible !-}
{-! for Tyvar derive : ShATermConvertible !-}
{-! for Type derive : ShATermConvertible !-}
{-! for ModuleInfo derive : ShATermConvertible !-}
{-! for AHsGuardedAlt derive : ShATermConvertible !-}
{-! for AHsGuardedAlts derive : ShATermConvertible !-}
{-! for AHsAlt derive : ShATermConvertible !-}
{-! for AHsFieldUpdate derive : ShATermConvertible !-}
{-! for AHsStmt derive : ShATermConvertible !-}
{-! for AHsPatField derive : ShATermConvertible !-}
{-! for AHsPat derive : ShATermConvertible !-}
{-! for AHsExp derive : ShATermConvertible !-}
{-! for AHsLiteral derive : ShATermConvertible !-}
{-! for AHsType derive : ShATermConvertible !-}
{-! for AHsQualType derive : ShATermConvertible !-}
{-! for AHsGuardedRhs derive : ShATermConvertible !-}
{-! for AHsRhs derive : ShATermConvertible !-}
{-! for AHsBangType derive : ShATermConvertible !-}
{-! for AHsConDecl derive : ShATermConvertible !-}
{-! for AHsMatch derive : ShATermConvertible !-}
{-! for AHsDecl derive : ShATermConvertible !-}
{-! for AHsAssoc derive : ShATermConvertible !-}
{-! for AHsImportSpec derive : ShATermConvertible !-}
{-! for AHsImportDecl derive : ShATermConvertible !-}
{-! for AHsExportSpec derive : ShATermConvertible !-}
{-! for AHsModule derive : ShATermConvertible !-}
{-! for AHsIdentifier derive : ShATermConvertible !-}
{-! for AHsName derive : ShATermConvertible !-}
{-! for AModule derive : ShATermConvertible !-}
{-! for ASrcLoc derive : ShATermConvertible !-}
{-! for Formula derive : ShATermConvertible !-}
{-! for Quantifier derive : ShATermConvertible !-}
{-! for AxiomBndr derive : ShATermConvertible !-}
{-! for AxBinding derive : ShATermConvertible !-}
{-! for HsGuardedAlt derive : ShATermConvertible !-}
{-! for HsGuardedAlts derive : ShATermConvertible !-}
{-! for HsAlt derive : ShATermConvertible !-}
{-! for HsFieldUpdate derive : ShATermConvertible !-}
{-! for HsStmt derive : ShATermConvertible !-}
{-! for HsPatField derive : ShATermConvertible !-}
{-! for HsPat derive : ShATermConvertible !-}
{-! for HsExp derive : ShATermConvertible !-}
{-! for HsLiteral derive : ShATermConvertible !-}
{-! for HsType derive : ShATermConvertible !-}
{-! for HsQualType derive : ShATermConvertible !-}
{-! for HsGuardedRhs derive : ShATermConvertible !-}
{-! for HsRhs derive : ShATermConvertible !-}
{-! for HsBangType derive : ShATermConvertible !-}
{-! for HsConDecl derive : ShATermConvertible !-}
{-! for HsMatch derive : ShATermConvertible !-}
{-! for HsDecl derive : ShATermConvertible !-}
{-! for HsAssoc derive : ShATermConvertible !-}
{-! for HsImportSpec derive : ShATermConvertible !-}
{-! for HsImportDecl derive : ShATermConvertible !-}
{-! for HsExportSpec derive : ShATermConvertible !-}
{-! for HsModule derive : ShATermConvertible !-}
{-! for HsName derive : ShATermConvertible !-}
{-! for HsQName derive : ShATermConvertible !-}
{-! for Module derive : ShATermConvertible !-}
{-! for SrcLoc derive : ShATermConvertible !-}
{-! for ModuleInfo derive : ShATermConvertible !-}
{-! for AHsGuardedAlt derive : ShATermConvertible !-}
{-! for AHsGuardedAlts derive : ShATermConvertible !-}
{-! for AHsAlt derive : ShATermConvertible !-}
{-! for AHsFieldUpdate derive : ShATermConvertible !-}
{-! for AHsStmt derive : ShATermConvertible !-}
{-! for AHsPatField derive : ShATermConvertible !-}
{-! for AHsPat derive : ShATermConvertible !-}
{-! for AHsExp derive : ShATermConvertible !-}
{-! for AHsLiteral derive : ShATermConvertible !-}
{-! for AHsType derive : ShATermConvertible !-}
{-! for AHsQualType derive : ShATermConvertible !-}
{-! for AHsGuardedRhs derive : ShATermConvertible !-}
{-! for AHsRhs derive : ShATermConvertible !-}
{-! for AHsBangType derive : ShATermConvertible !-}
{-! for AHsConDecl derive : ShATermConvertible !-}
{-! for AHsMatch derive : ShATermConvertible !-}
{-! for AHsDecl derive : ShATermConvertible !-}
{-! for AHsAssoc derive : ShATermConvertible !-}
{-! for AHsImportSpec derive : ShATermConvertible !-}
{-! for AHsImportDecl derive : ShATermConvertible !-}
{-! for AHsExportSpec derive : ShATermConvertible !-}
{-! for AHsModule derive : ShATermConvertible !-}
{-! for AHsIdentifier derive : ShATermConvertible !-}
{-! for AHsName derive : ShATermConvertible !-}
{-! for AModule derive : ShATermConvertible !-}
{-! for ASrcLoc derive : ShATermConvertible !-}

