Cpo
Flatcpo < Cpo
Pcpo < Cpo
Type Constructors
?__ :Type ->Type := \ t:Type .  Unit ->? t
Pred__ :Type- ->Type := \ t:Type- .  t ->? Unit
Unit :(Type, Pcpo)
__*__ :(Type+ ->Type+ ->Type, Pcpo+ ->Pcpo+ ->Pcpo,
	Cpo+ ->Cpo+ ->Cpo)
__*__*__ :Type+ ->Type+ ->Type+ ->Type
__-->__ :(Cpo- ->Cpo+ ->Cpo, Cpo- ->Pcpo+ ->Pcpo)
__-->?__ :Cpo- ->Cpo+ ->Pcpo
__->__ :Type- ->Type+ ->Type
__->?__ :Type- ->Type+ ->Type
bool :(Type, Flatcpo) %% free type definition omitted
c :Cpo %(var)%
c-->d :Type< c -->? d
c-->?d :Type< c ->? d
d :Cpo %(var)%
f :Flatcpo %(var)%
logical :Type %% free type definition omitted
nat :(Type, Flatcpo)
p :Pcpo %(var)%
s :Type< ? s %(var)%
s->t :Type< s ->? t
t :Type %(var)%
Assumptions
Y : p -->? p --> p
__/\__ : logical × logical -> logical
__<=>__ : logical × logical -> logical
__=>__ : logical × logical -> logical
__\/__ : logical × logical -> logical
__if__ : logical × logical -> logical
bottom : p
def : (Pred)(s)
f : c --> d %(var)%
false : logical
g : c --> d %(var)%
not : logical -> logical
sup : nat -> c ->? c
true : logical
tt : (Pred)(s)
undefined : c -->? p = Y (\ x : c -->? p .! x)
x : s %(var)%
x1 : c %(var)%
x2 : c %(var)%
y1 : d %(var)%
y2 : d %(var)%
Error "Prelude.hascasl" (line 4, column 7) illegal universe class declaration
Warning "Prelude.hascasl" (line 27, column 11) redeclared type 'Unit'
Error "Prelude.hascasl" (line 29, column 5) unexpected mixfix token '='
Warning "Prelude.hascasl" (line 39, column 16) redeclared type 't'
Error "Prelude.hascasl" (line 45, column 14) undeclared type 'Pred'
Error "Prelude.hascasl" (line 45, column 14) undeclared type 'Pred'
Hint "Prelude.hascasl" (line 46, column 9) not a class 's'
FatalError "Prelude.hascasl" (line 48, column 1) no analysis yet for: program def = \ x : s . ()
	%% def is also total (identical to tt) 
FatalError "Prelude.hascasl" (line 50, column 1) no analysis yet for: program tt = \ x : s . ()
	%% tt is total "op tt(x: s): unit = ()"
FatalError "Prelude.hascasl" (line 52, column 1) no analysis yet for: program __ und __ (x, y : Unit) : Unit = ()
Error "Prelude.hascasl" (line 60, column 16) unexpected mixfix token '='
FatalError "Prelude.hascasl" (line 64, column 1) no analysis yet for: program __ res __ (x : s, y : t) : s = x
FatalError "Prelude.hascasl" (line 65, column 1) no analysis yet for: program fst (x : s, y : t) : s = x
FatalError "Prelude.hascasl" (line 66, column 1) no analysis yet for: program snd (x : s, y : t) : t = y
Error "Prelude.hascasl" (line 72, column 3) unexpected mixfix token 'fst'
Error "Prelude.hascasl" (line 71, column 3) unexpected mixfix token '['
FatalError "Prelude.hascasl" (line 78, column 1) no analysis yet for: pred eq : s × s
Error "Prelude.hascasl" (line 81, column 3) unexpected mixfix token '['
Error "Prelude.hascasl" (line 80, column 3) unexpected mixfix token '['
Warning "Prelude.hascasl" (line 91, column 6) redeclared type 's'
FatalError "Prelude.hascasl" (line 93, column 1) no analysis yet for: program all (p : Pred (s)) : Pred Unit = eq (p, tt)
FatalError "Prelude.hascasl" (line 96, column 1) no analysis yet for: program And (x, y : Pred Unit) : Pred Unit = t1 () und t2 ()
FatalError "Prelude.hascasl" (line 99, column 1) no analysis yet for: program __ impl __ (x, y : Pred Unit) : Pred Unit = eq (x, x And y)
FatalError "Prelude.hascasl" (line 101, column 1) no analysis yet for: program __ or __ (x, y : Pred Unit) : Pred Unit =
	all (\ r : Pred Unit . ((x impl r) und (y impl r)) impl r)
FatalError "Prelude.hascasl" (line 104, column 1) no analysis yet for: program ex (p : Pred (s)) : Pred Unit =
	all (\ r : Pred Unit . all (\ x : s . p (x) impl r) impl r)
FatalError "Prelude.hascasl" (line 107, column 1) no analysis yet for: program ff () : Pred Unit = all (\ r : Pred Unit . r ())
FatalError "Prelude.hascasl" (line 109, column 1) no analysis yet for: program neg (r : Pred Unit) : Pred Unit = r impl ff
Error "Prelude.hascasl" (line 114, column 3) unexpected mixfix token 'all'
Warning "Prelude.hascasl" (line 121, column 13) redundant universe class
FatalError "Prelude.hascasl" (line 125, column 1) no analysis yet for: pred __<<=__ : c × c
Error "Prelude.hascasl" (line 129, column 3) unexpected mixfix token 'all'
Error "Prelude.hascasl" (line 128, column 3) unexpected mixfix token 'all'
Error "Prelude.hascasl" (line 127, column 3) unexpected mixfix token 'all'
FatalError "Prelude.hascasl" (line 131, column 1) no analysis yet for: pred isChain(s : nat -> c) <=> all
			       (\ n : nat . s (n) <<= s (Suc (n)))
FatalError "Prelude.hascasl" (line 132, column 1) no analysis yet for: pred isBound(x : c, s : nat -> c) <=> all (\ n : nat . s (n) <<= x)
Error "Prelude.hascasl" (line 140, column 3) unexpected mixfix token 'all'
Error "Prelude.hascasl" (line 136, column 3) unexpected mixfix token 'all'
Error "Prelude.hascasl" (line 149, column 3) unexpected mixfix token 'all'
FatalError "Prelude.hascasl" (line 156, column 2) no analysis yet for: program __ <<= [f] __ = eq
Warning "Prelude.hascasl" (line 159, column 5) redeclared type 'c'
Hint "Prelude.hascasl" (line 163, column 13) not a class 'c'
Hint "Prelude.hascasl" (line 163, column 13) not a class 'c'
Hint "Prelude.hascasl" (line 163, column 25) not a class 'd'
Hint "Prelude.hascasl" (line 163, column 25) not a class 'd'
FatalError "Prelude.hascasl" (line 165, column 1) no analysis yet for: program (x1, y1) <<= (x2, y2) = (x1 <<= x2) und (y1 <<= y2)
Error "Prelude.hascasl" (line 176, column 20) unexpected mixfix token '='
FatalError "Prelude.hascasl" (line 182, column 3) no analysis yet for: program f <<= [c -->? d] g =
	all (\ x : c . def (f x) impl f (x) <<= g (x))
Error "Prelude.hascasl" (line 188, column 18) unexpected mixfix token '='
Hint "Prelude.hascasl" (line 190, column 13) not a class 'c --> d'
Hint "Prelude.hascasl" (line 190, column 13) not a class 'c --> d'
FatalError "Prelude.hascasl" (line 192, column 2) no analysis yet for: program f <<= g = f <<= [c -->? d] g
Error "Prelude.hascasl" (line 198, column 3) unexpected mixfix token 'all'
Error "Prelude.hascasl" (line 201, column 28) unexpected mixfix token '['
