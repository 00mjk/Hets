type bool ::= true | 
	      false
op l : bool
type Unit
op a : Unit = case (op l : bool) of true : bool -> () | 
				    false : bool -> ()
op b : Unit = let x : bool = (op true : bool);
		  y : bool = (op false : bool);
		  z : bool = (var x : bool) in ()
op b : Unit -> Unit = \ x : _var_169 . ()
%% Type Constructors -----------------------------------------------------
Unit : Type
bool : Type %[type __ ::=
	      true : -> __
	      false : -> __]%
%% Assumptions -----------------------------------------------------------
a : Unit = case (op l : bool) of true : bool -> () | 
				 false : bool -> ()
b : Unit -> Unit = \ x : _var_169 . ()
  : Unit = let x : bool = (op true : bool);
	       y : bool = (op false : bool);
	       z : bool = (var x : bool) in ()
false : bool %(construct bool)%
l : bool
true : bool %(construct bool)%
