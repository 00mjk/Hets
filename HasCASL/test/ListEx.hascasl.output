var b : Type
var a : Type+
type List(a : Type+)
free type List(a : Type+) ::= Nil | 
			      Cons (head:a; tail:List a)
free type List(a : Type+) ::= Nil | 
			      Cons (head:a; tail:List b)
free type List(a : Type+) ::= Nil | 
			      Cons (head:a; tail:List a b)
%% Type Constructors -----------------------------------------------------
List : Type+ -> Type %[free type __ a : Type+ ::=
			    Nil : -> __
			    Cons : a × List a -> __ (head : a)(tail : List a)]%
Pred : Type -> Type := \ a : Type . a ->? Unit
Unit : Type := Unit
__-->__ : Type- -> Type+ -> Type
__-->?__ : Type- -> Type+ -> Type
__->__ : Type- -> Type+ -> Type
__->?__ : Type- -> Type+ -> Type
__×__ : Type+ -> Type+ -> Type
a : Type+ %(var)%
b : Type %(var)%
%% Assumptions -----------------------------------------------------------
Cons : forall a : Type+ .  a ×
			   List a b -> List a %(construct List)%
     : forall a : Type+ .  a × List a -> List a %(construct List)%
Nil : forall a : Type+ .  List a %(construct List)%
__/\__ : Unit × Unit ->? Unit
__<=>__ : Unit × Unit ->? Unit
__=__ : forall a : Type .  a × a ->? Unit
__=>__ : Unit × Unit ->? Unit
__=e=__ : forall a : Type .  a × a ->? Unit
__\/__ : Unit × Unit ->? Unit
def__ : forall a : Type .  a ->? Unit
head : forall a : Type+ .  List a -> a %(select from List constructed by
				      (Cons : forall a : Type+ .  a × List a -> List a,
				       Cons : forall a : Type+ .  a × List b -> List a,
				       Cons : forall a : Type+ .  a × List a b -> List a))%
if__then__else__ : forall a : Type .  Unit × a × a ->? a
not__ : Unit ->? Unit
tail : forall a : Type+ .  List a -> List a b %(select from List constructed by
					     Cons : forall a : Type+ .  a × List a b -> List a)%
     : forall a : Type+ .  List a -> List a %(select from List constructed by
					   Cons : forall a : Type+ .  a × List a -> List a)%
%% Diagnostics -----------------------------------------------------------
Hint (line 1, column 5) is type variable 'b'
Hint (line 2, column 5) is type variable 'a'
Warning (line 3, column 11) redeclared type 'a'
Warning (line 4, column 16) redeclared type 'a'
Warning (line 4, column 11) redeclared type 'List'
Warning (line 5, column 16) redeclared type 'a'
Error (line 5, column 28) wrong type scheme of 'Cons'
  expected: forall a : Type+ .  a × List a -> List a
     found: forall a : Type+ .  a × List b -> List a

Error (line 5, column 43) wrong type scheme of 'tail'
  expected: forall a : Type+ .  List a -> List a
     found: forall a : Type+ .  List a -> List b

Warning (line 5, column 11) redeclared type 'List'
Error (line 5, column 11) merge: TypeDefn of 'List'

Warning (line 6, column 16) redeclared type 'a'
Error (line 6, column 57) unexpected type argument 'b'
Warning (line 6, column 11) redeclared type 'List'
Error (line 6, column 11) merge: TypeDefn of 'List'

