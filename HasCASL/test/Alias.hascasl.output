var s : Type
type MyPred : Type -> Type := \ s : Type . s_v-1 ->? Unit
type MyAlias : Type -> Type := \ t : Type . t_v-1 ->? Unit
type a1 : Type -> Type -> Type := \ (a : Type)
                                    (b : Type) . a_v-1 -> b_v-2 -> Unit
type a1 : Type -> Type -> Type := \ (a : Type)
                                    (b : Type) . a_v-1 -> b_v-2 -> Unit
type a1 : Type -> Type -> Type := \ (a : Type)
                                    (b : Type) . a_v-1 -> b_v-2 -> Unit
type a2 : Type -> Type -> Type := \ a : Type . a_v-1 -> Unit
type a3 : Type -> Type -> Type := \ a : Type . a_v-1 -> Unit
type a4 : Type -> Type -> Type := \ a : Type . a_v-1 -> Unit
type a5(a : Type)
type a6(a : Type)
type a7 : Type -> Type := \ a : Type . a6 a_v-1 -> Unit
%% Type Constructors -----------------------------------------------------
Logical : Type := Unit ->? Unit
MyAlias : Type -> Type := \ t : Type . t_v-1 ->? Unit
MyPred : Type -> Type := \ s : Type . s_v-1 ->? Unit
Pred : -Type -> Type := \ a : -Type . a_v-1 ->? Unit
Unit : Type
__*__ : +Type -> +Type -> Type
__*__*__ : +Type -> +Type -> +Type -> Type
__*__*__*__ : +Type -> +Type -> +Type -> +Type -> Type
__*__*__*__*__ : +Type -> +Type -> +Type -> +Type -> +Type -> Type
__-->__ : -Type -> +Type -> Type < (__-->?__, __->__)
__-->?__ : -Type -> +Type -> Type < __->?__
__->__ : -Type -> +Type -> Type < __->?__
__->?__ : -Type -> +Type -> Type
a1
  : Type -> Type -> Type
    := \ (a : Type)(b : Type) . a_v-1 -> b_v-2 -> Unit
a2 : Type -> Type -> Type := \ a : Type . a_v-1 -> Unit
a3 : Type -> Type -> Type := \ a : Type . a_v-1 -> Unit
a4 : Type -> Type -> Type := \ a : Type . a_v-1 -> Unit
a5 : Type -> Type
a6 : Type -> Type
a7 : Type -> Type := \ a : Type . a6 a_v-1 -> Unit
%% Type Variables --------------------------------------------------------
a  : Type %(var_20)%
b  : Type %(var_11)%
s  : Type %(var_2)%
t  : Type %(var_3)%
%% Assumptions -----------------------------------------------------------
__/\__ : ? Unit * ? Unit ->? Unit %(fun)%
__<=>__ : ? Unit * ? Unit ->? Unit %(fun)%
__=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit %(fun)%
__=>__ : ? Unit * ? Unit ->? Unit %(fun)%
__=e=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit %(fun)%
__\/__ : ? Unit * ? Unit ->? Unit %(fun)%
__if__ : ? Unit * ? Unit ->? Unit %(fun)%
__when__else__
  : forall a : Type . a_v-1 * ? Unit * a_v-1 ->? a_v-1 %(fun)%
bottom : forall a : Type . a_v-1 %(fun)%
def__ : forall a : Type . a_v-1 ->? Unit %(fun)%
false : Unit %(fun)%
not__ : ? Unit ->? Unit %(fun)%
true : Unit %(fun)%
¬__ : ? Unit ->? Unit %(fun)%
%% Diagnostics -----------------------------------------------------------
*** Hint 1.5, is type variable 's'
*** Hint 2.13, rebound type variable 's'
*** Warning 3.14, missing kind for type variable  't'
*** Warning 5.9, missing kind for type variable  'a'
*** Warning 5.11, missing kind for type variable  'b'
*** Hint 6.15, rebound type variable 'a'
*** Hint 6.19, rebound type variable 'b'
*** Hint 6.6, redeclared type 'a1'
*** Hint 7.9, rebound type variable 'a'
*** Hint 7.16, rebound type variable 'b'
*** Hint 7.6, redeclared type 'a1'
*** Hint 9.15, rebound type variable 'a'
*** Hint 9.19, rebound type variable 'b'
*** Warning 9.26, ignoring unused variable(s)
  b in 'a_v10 -> Unit'
*** Hint 11.15, rebound type variable 'a'
*** Hint 11.19, rebound type variable 'a'
*** Warning 11.26, ignoring unused variable(s)
  a in 'a_v13 -> Unit'
*** Error 11.15, duplicates at '(11,19)' for 'a'
*** Hint 13.9, rebound type variable 'a'
*** Hint 13.11, rebound type variable 'a'
*** Warning 13.18, ignoring unused variable(s)
  a in 'a_v15 -> Unit'
*** Error 13.9, duplicates at '(13,11)' for 'a'
*** Hint 15.9, rebound type variable 'a'
*** Hint 17.9, rebound type variable 'a'
*** Error 17.19, illegal recursive type synonym 'a5 a_v17 -> Unit'
*** Hint 19.9, rebound type variable 'a'
*** Hint 21.9, rebound type variable 'a'
*** Hint 23.9, rebound type variable 'a'
*** Error 23.19, illegal recursive type synonym 'a7 a_v20@(a6 a_v20 -> Unit) -> Unit'
