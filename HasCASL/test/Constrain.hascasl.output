class Eq < Type
class Ord < Eq
type a : Ord
op f : forall e : Ord . e -> e
op c : a
. ((fun __=__[a] : forall a : Type . a_v-1 * a_v-1 ->? Unit) :
       a * a ->? Unit)
    (((op f[a] : forall e : Ord . e_v-1 -> e_v-1) : a -> a)
       (((op f[a] : forall e : Ord . e_v-1 -> e_v-1) : a -> a)(op c : a) :
            a) :
         a,
     op c : a) :
      Unit
type t : Eq
op b : t
. ((fun __=__[t] : forall a : Type . a_v-1 * a_v-1 ->? Unit) :
       t * t ->? Unit)
    (((op f[t] : forall e : Ord . e_v-1 -> e_v-1) : t -> t)(op b : t) :
         t,
     op b : t) :
      Unit
%% Classes ---------------------------------------------------------------
Eq < Type
Ord < Eq
%% Type Constructors -----------------------------------------------------
Logical : Type := Unit ->? Unit
Pred : Type -> Type := \ a : Type . a_v-1 ->? Unit
Unit : Type
__*__ : Type+ -> Type+ -> Type
__-->__ : Type- -> Type+ -> Type < (__-->?__, __->__)
__-->?__ : Type- -> Type+ -> Type < __->?__
__->__ : Type- -> Type+ -> Type < __->?__
__->?__ : Type- -> Type+ -> Type
a : Ord
t : Eq
%% Assumptions -----------------------------------------------------------
__/\__ : ? Unit * ? Unit ->? Unit %(fun)%
__<=>__ : ? Unit * ? Unit ->? Unit %(fun)%
__=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit %(fun)%
__=>__ : ? Unit * ? Unit ->? Unit %(fun)%
__=e=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit %(fun)%
__\/__ : ? Unit * ? Unit ->? Unit %(fun)%
__if__ : ? Unit * ? Unit ->? Unit %(fun)%
__when__else__
  : forall a : Type . a_v-1 * ? Unit * a_v-1 ->? a_v-1 %(fun)%
b : t %(op)%
bottom : forall a : Type . a_v-1 %(fun)%
c : a %(op)%
def__ : forall a : Type . a_v-1 ->? Unit %(fun)%
f : forall e : Ord . e_v-1 -> e_v-1 %(op)%
false : Unit %(fun)%
not__ : ? Unit ->? Unit %(fun)%
true : Unit %(fun)%
¬__ : ? Unit ->? Unit %(fun)%
%% Sentences -------------------------------------------------------------
((fun __=__[a] : forall a : Type . a_v-1 * a_v-1 ->? Unit) :
     a * a ->? Unit)
  (((op f[a] : forall e : Ord . e_v-1 -> e_v-1) : a -> a)
     (((op f[a] : forall e : Ord . e_v-1 -> e_v-1) : a -> a)(op c : a) :
          a) :
       a,
   op c : a) :
    Unit
((fun __=__[t] : forall a : Type . a_v-1 * a_v-1 ->? Unit) :
     t * t ->? Unit)
  (((op f[t] : forall e : Ord . e_v-1 -> e_v-1) : t -> t)(op b : t) :
       t,
   op b : t) :
    Unit
%% Diagnostics -----------------------------------------------------------
*** Hint 16.9, 
  expected: Ord
     found: Eq

*** Error 16.9, in term'((fun __=__[t] : forall a : Type . a_v-1 * a_v-1 ->? Unit) :
     t * t ->? Unit)
  (((op f[t] : forall e : Ord . e_v-1 -> e_v-1) : t -> t)(op b : t) :
       t,
   op b : t) :
    Unit' of type 'Unit'
 unresolved constraints '{ t : Ord }'
