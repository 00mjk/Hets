type s, t < t
op a, b : s
%% op __ + __ : s  -> s -> s, idem, assoc, comm;
op __+__ : s * s -> s
op __+__ : t * t -> t
op : t -> t -> t
op a, b : t
op c : s = (op __+__ : s * s -> s)(op a : s, op b : s) as s
op d : s = (op __+__ : s * s -> s)(op a : s, op a : s) as s
op e : s * s -> s = (op __+__ : s * s -> s) as s * s -> s
op f : s * s -> s = (op __+__ : s * s -> s) as s * s -> s
op g : s * s = (op a : s, op b : s) as s * s
op h : s = (op __+__ : s * s -> s)(op a : s, op b : s) as s
op i : s
     = (op __+__ : s * s -> s)((op a : s) : s, (op b : s) : s) as s
op incr : s -> s
op i1 : s = (op incr : s -> s)(op a : s) as s
op i2 : s = (op incr : s -> s)(op a : s) as s
op i3 : s = (op incr : s -> s)(op a : s) as s
op __<=__<=__ : s * s * s -> s
op l1 : s
     = (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
           s
op l2 : s * s * s -> s
     = (op __<=__<=__ : s * s * s -> s) as s * s * s -> s
op l3 : s
     = (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
           s
op l4 : s
     = (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
           s
op l5 : s * s * s = (op a : s, op b : s, op c : s) as s * s * s
op x : s
op y : s
     = (op __<=__<=__ : s * s * s -> s)
         (op a : s, var x : s, (op a : s) : s) as
           s
op z : s = (x as s) + ((x as t) as s)
. (op x : s) in s %(bla_label)%
%% Type Constructors -----------------------------------------------------
Logical : Type := Unit ->? Unit
Pred : Type -> Type := \ a : Type . a_v-1 ->? Unit
Unit : Type
__*__ : Type+ -> Type+ -> Type
__-->__ : Type- -> Type+ -> Type < (__-->?__, __->__)
__-->?__ : Type- -> Type+ -> Type < __->?__
__->__ : Type- -> Type+ -> Type < __->?__
__->?__ : Type- -> Type+ -> Type
s : Type < t
t : Type < t
%% Assumptions -----------------------------------------------------------
__+__
  : t * t -> t %(op)%
  : s * s -> s %(op)%
__/\__ : ? Unit * ? Unit ->? Unit %(fun)%
__<=__<=__ : s * s * s -> s %(op)%
__<=>__ : ? Unit * ? Unit ->? Unit %(fun)%
__=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit %(fun)%
__=>__ : ? Unit * ? Unit ->? Unit %(fun)%
__=e=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit %(fun)%
__\/__ : ? Unit * ? Unit ->? Unit %(fun)%
__if__ : ? Unit * ? Unit ->? Unit %(fun)%
__when__else__
  : forall a : Type . a_v-1 * ? Unit * a_v-1 ->? a_v-1 %(fun)%
a : t %(op)%
  : s %(op)%
b : t %(op)%
  : s %(op)%
bottom : forall a : Type . a_v-1 %(fun)%
c : s %(op)% = (op __+__ : s * s -> s)(op a : s, op b : s) as s
d : s %(op)% = (op __+__ : s * s -> s)(op a : s, op a : s) as s
def__ : forall a : Type . a_v-1 ->? Unit %(fun)%
e : s * s -> s %(op)% = (op __+__ : s * s -> s) as s * s -> s
f : s * s -> s %(op)% = (op __+__ : s * s -> s) as s * s -> s
false : Unit %(fun)%
g : s * s %(op)% = (op a : s, op b : s) as s * s
h : s %(op)% = (op __+__ : s * s -> s)(op a : s, op b : s) as s
i : s
    %(op)%
      = (op __+__ : s * s -> s)((op a : s) : s, (op b : s) : s) as s
i1 : s %(op)% = (op incr : s -> s)(op a : s) as s
i2 : s %(op)% = (op incr : s -> s)(op a : s) as s
i3 : s %(op)% = (op incr : s -> s)(op a : s) as s
incr : s -> s %(op)%
l1
  : s
    %(op)%
      = (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
            s
l2
  : s * s * s -> s
    %(op)% = (op __<=__<=__ : s * s * s -> s) as s * s * s -> s
l3
  : s
    %(op)%
      = (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
            s
l4
  : s
    %(op)%
      = (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
            s
l5 : s * s * s %(op)% = (op a : s, op b : s, op c : s) as s * s * s
not__ : ? Unit ->? Unit %(fun)%
true : Unit %(fun)%
x : s %(op)%
y : s
    %(op)%
      = (op __<=__<=__ : s * s * s -> s)
          (op a : s, var x : s, (op a : s) : s) as
            s
¬__ : ? Unit ->? Unit %(fun)%
%% Sentences -------------------------------------------------------------
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op c : s,
   (op __+__ : s * s -> s)(op a : s, op b : s) as s) %(def_c)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op d : s,
   (op __+__ : s * s -> s)(op a : s, op a : s) as s) %(def_d)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op e : s * s -> s,
   (op __+__ : s * s -> s) as s * s -> s) %(def_e)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op f : s * s -> s,
   (op __+__ : s * s -> s) as s * s -> s) %(def_f)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op g : s * s, (op a : s, op b : s) as s * s) %(def_g)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op h : s,
   (op __+__ : s * s -> s)(op a : s, op b : s) as s) %(def_h)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op i : s,
   (op __+__ : s * s -> s)((op a : s) : s, (op b : s) : s) as
       s) %(def_i)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op i1 : s, (op incr : s -> s)(op a : s) as s) %(def_i1)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op i2 : s, (op incr : s -> s)(op a : s) as s) %(def_i2)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op i3 : s, (op incr : s -> s)(op a : s) as s) %(def_i3)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op l1 : s,
   (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
       s) %(def_l1)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op l2 : s * s * s -> s,
   (op __<=__<=__ : s * s * s -> s) as s * s * s -> s) %(def_l2)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op l3 : s,
   (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
       s) %(def_l3)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op l4 : s,
   (op __<=__<=__ : s * s * s -> s)(op a : s, op b : s, op c : s) as
       s) %(def_l4)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op l5 : s * s * s,
   (op a : s, op b : s, op c : s) as s * s * s) %(def_l5)%
(fun __=__ : forall a : Type . a_v-1 * a_v-1 ->? Unit)
  (op y : s,
   (op __<=__<=__ : s * s * s -> s)
     (op a : s, var x : s, (op a : s) : s) as
       s) %(def_y)%
(op x : s) in s %(bla_label)%
%% Diagnostics -----------------------------------------------------------
*** Error 9.7, expected tuple argument for '__+__'
*** Hint 13.14, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : t, op b : t) as s'

*** Hint 13.14, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : t, op b : s) as s'

*** Hint 13.14, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : s, op b : t) as s'

*** Hint 15.17, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : t, op a : t) as s'

*** Hint 15.17, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : t, op a : s) as s'

*** Hint 15.17, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : s, op a : t) as s'

*** Hint 17.24, contradicting type inclusions for 's' and 't' of '(op __+__ : t * t -> t) as s * s -> s'

*** Hint 19.25, contradicting type inclusions for 's' and 't' of '(op __+__ : t * t -> t) as s * s -> s'

*** Hint 23.16, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : t, op b : t) as s'

*** Hint 23.16, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : t, op b : s) as s'

*** Hint 23.16, contradicting type inclusions for 's' and 't' of '(op __+__ : s * s -> s)(op a : s, op b : t) as s'

*** Hint 25.23, contradicting type inclusions for 's' and 't' of '(op a : t) : s'

*** Hint 25.30, contradicting type inclusions for 's' and 't' of '(op b : t) : s'

*** Hint 25.23, contradicting type inclusions for 's' and 't' of '(op a : t) : s'

*** Hint 25.30, contradicting type inclusions for 's' and 't' of '(op b : t) : s'

*** Hint 30.13, contradicting type inclusions for 's' and 't' of '(op incr : s -> s)(op a : t) as s'

*** Hint 31.13, contradicting type inclusions for 's' and 't' of '(op incr : s -> s)(op a : t) as s'

*** Hint 32.14, contradicting type inclusions for 's' and 't' of '(op incr : s -> s)(op a : t) as s'

*** Hint 36.14, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : t, op b : t, op c : s) as s'

*** Hint 36.14, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : t, op b : s, op c : s) as s'

*** Hint 36.14, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : s, op b : t, op c : s) as s'

*** Hint 38.16, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : t, op b : t, op c : s) as s'

*** Hint 38.16, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : t, op b : s, op c : s) as s'

*** Hint 38.16, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : s, op b : t, op c : s) as s'

*** Hint 39.17, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : t, op b : t, op c : s) as s'

*** Hint 39.17, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : t, op b : s, op c : s) as s'

*** Hint 39.17, contradicting type inclusions for 's' and 't' of '(op __<=__<=__ : s * s * s -> s)(op a : s, op b : t, op c : s) as s'

*** Hint 44.42, contradicting type inclusions for 's' and 't' of '(op a : t) : s'

*** Hint 46.26, contradicting type inclusions for 's' and 't' of '(op x : s) as t as s'

*** Hint 46.26, contradicting type inclusions for 's' and 't' of '(op x : s) as t as s'

*** Error 46.22, untypable application '__+__(x as s, x as t as s)'
*** Error 46.22, no typing for '__+__(x as s, x as t as s) as s'
*** Hint 50.3, contradicting type inclusions for 's' and 't' of '(op x : s) in t'

*** Error 50.3, no typing for 'x in t'
