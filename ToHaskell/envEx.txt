-- HasCASL
sort b
free type A ::= A b


-- Abstrakte Syntax nach statischer Analyse
Env {
 classMap = {}, 
 typeMap = 
   {Id [Token {tokStr = "A", tokPos = "test/Test.hascasl" (line 2, column 11)}]
      [] []:=TypeInfo 
                 {typeKind = ExtClass (Intersection {iclass = {},  
                                classPos = []}) InVar [], 
                  otherTypeKinds = [], 
                  superTypes = [], 
                  typeDefn = DatatypeDefn Free
                 },
    Id [Token {tokStr = "b", tokPos = "test/Test.hascasl" (line 1, column 6)}] 
      [] []:=TypeInfo 
                 {typeKind = ExtClass (Intersection {iclass = {}, 
                                classPos = []}) InVar [], 
                  otherTypeKinds = [], 
                  superTypes = [], 
                  typeDefn = NoTypeDefn
                 }
   }, 
 assumps = {}, 
 envDiags = [], 
 counter = 1}

