<?xml version="1.0" encoding="utf-8"?>

<omdoc xmlns:dc="http://purl.org/dc/elements/1.1/" 
       xmlns="http://omdoc.org/ns"
       xmlns:om="http://svn.openmath.org/ns/"
       xmlns:m="http://www.w3.org/1998/Math/MathML"
       xml:id="casl.omdoc">

<metadata>
 <dc:creator role="aut">Ewaryst Schulz</dc:creator>
 <dc:date action="created">2009-02-17T00:00:00</dc:date>
 <dc:title>The CASL logic language</dc:title>
 <dc:rights>GPL</dc:rights>
</metadata>

  <theory xml:id="casl">

   <metadata>
     <dc:title>The new CASL logic language</dc:title>
   </metadata>

   <imports xml:id="pl1-imports" from="pl1.omdoc#pl1"/>

   <symbol name="eq">
     <metadata>
       <dc:description>
           <OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMS cd="casl" name="eq"/></OMOBJ>
       is the strong equality on any sort except bool.</dc:description>
     </metadata>
   </symbol>

   <symbol name="eeq">
     <metadata>
       <dc:description>
           <OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMS cd="casl" name="eeq"/></OMOBJ>
       is the existential equality on any sort except bool.</dc:description>
     </metadata>
   </symbol>

  <symbol name="existsunique" xml:id="casl.existsunique">
   <metadata><dc:subject>existsunique</dc:subject>
   <dc:description>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMS cd="casl" name="existsunique"/></OMOBJ>
    is the binding symbol for the unique existential ("there exists exactly one") quantifier.
  </dc:description>
</metadata>
  </symbol>

    <omtext xml:id="function-types" type="comment">
     <CMP>Functions with multiple arguments are typed using currying and its type
          is constructed with the <OMS cd="simpletypes" name="funtype"/> symbol. Partial functions are
          constructed the same way but the innermost arrow (symbol) is replaced
          by the <OMS cd="casl" name="partialfuntype"/> symbol declared beneath.</CMP>
    </omtext>

   <symbol name="partialfuntype">
     <metadata>
       <dc:description>
           <OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMS cd="casl" name="partialfuntype"/></OMOBJ>
       is the type constructor for partial function types.</dc:description>
     </metadata>
   </symbol>

    <!-- Definedness, Membership -->

    <symbol name="defined">
   <metadata><dc:subject>defined</dc:subject>
   <dc:description>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMS cd="casl" name="defined"/></OMOBJ>
    is the definedness predicate.
  </dc:description>
</metadata>
    </symbol>

    <symbol name="in" xml:id="casl.in">
   <metadata><dc:subject>in</dc:subject>
   <dc:description>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMS cd="casl" name="in"/></OMOBJ>
    is the membership (object,sort-) predicate.
  </dc:description>
</metadata>
    </symbol>

  <symbol name="if" xml:id="casl.if">
   <metadata><dc:subject>if</dc:subject>
   <dc:description>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMS cd="casl" name="if"/></OMOBJ>
    is the ternary if/then/else operator.
  </dc:description>
</metadata>
  </symbol>

    <symbol name="cast" xml:id="casl.cast">
   <metadata><dc:subject>cast</dc:subject>
   <dc:description>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMS cd="casl" name="cast"/></OMOBJ>
    is the downcast (object,sort-) operator.
  </dc:description>
</metadata>
    </symbol>

    <omtext xml:id="upcast-by-attribution" type="comment">
     <CMP>The upcast is realised by an attribution around the term, such as
    for typing of bound variables</CMP>
    </omtext>

  </theory>
</omdoc>
