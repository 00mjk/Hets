-- do not edit; automatically generated by UU_AG
module ExpressionAttr where

import UU_Pretty(PP_Doc)
import Expression
import HsTokenScanner(lexTokens)
import SemHsTokens(sem_HsTokensRoot)
import ErrorMessages
import TokenDef
import CommonTypes
import HsToken

import TokenDef(Pos)
-- Expression --------------------------------------------------
{-
   inherited attributes:
      attrs                : [(String,String)]
      con                  : String
      locals               : [String]
      nt                   : String

   chained attributes:
      errors               : Errors

   synthesised attributes:
      pp                   : PP_Doc
      usedAttrs            : [(String,String)]
      usedLocals           : [String]

-}
{-
   local variables for Expression.Expression:
      usedLocals
      usedAttrs
      pp
      errors

-}
-- semantic domain
type T_Expression = ([(String,String)]) ->
                    (String) ->
                    (Errors) ->
                    ([String]) ->
                    (String) ->
                    ((Errors),(PP_Doc),([(String,String)]),([String]))
-- cata
sem_Expression :: (Expression) ->
                  (T_Expression)
sem_Expression ((Expression (_pos) (_txt))) =
    (sem_Expression_Expression (_pos) (_txt))
sem_Expression_Expression :: (Pos) ->
                             (String) ->
                             (T_Expression)
sem_Expression_Expression (_pos) (_txt) (_lhs_attrs) (_lhs_con) (_lhs_errors) (_lhs_locals) (_lhs_nt) =
    let ((_errors,_pp,_usedAttrs,_usedLocals)) =
            let p | line _pos < 1 = Pos "" 1 1
                  | otherwise     = _pos
            in sem_HsTokensRoot (HsTokensRoot $ lexTokens _pos _txt) _lhs_attrs _lhs_con _lhs_errors _lhs_locals _lhs_nt
    in  (_errors,_pp,_usedAttrs,_usedLocals)

