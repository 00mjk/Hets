-- do not edit; automatically generated by UU_AG
module AbstractSyntax where

import CommonTypes
import UU_Pretty
import UU_Maps
import Patterns
import Expression
-- Alternative -------------------------------------------------
data Alternative = Alternative (String) (Children) (Rules) (LocRules)
-- Alternatives ------------------------------------------------
type Alternatives = [(Alternative)]
-- Child -------------------------------------------------------
data Child = Child (String) (String) (Attributes) (Attributes) (Rules)
-- Children ----------------------------------------------------
type Children = [(Child)]
-- Grammar -----------------------------------------------------
data Grammar = Grammar (TypeSyns) (UseMap) (Productions)
-- LocRule -----------------------------------------------------
data LocRule = LocRule (Pattern) (Expression) (Bool)
-- LocRules ----------------------------------------------------
type LocRules = [(LocRule)]
-- Production --------------------------------------------------
data Production = Production (String) (Attributes) (Attributes) (Alternatives)
-- Productions -------------------------------------------------
type Productions = [(Production)]
-- Rule --------------------------------------------------------
data Rule = Rule (Name) (Expression)
-- Rules -------------------------------------------------------
type Rules = [(Rule)]

