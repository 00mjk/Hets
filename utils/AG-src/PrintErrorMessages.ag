{- UU_AG
 - Copyright:  S. Doaitse Swierstra, Arthur I. Baars and Andres Loeh
               Department of Computer Science
               Utrecht University
               P.O. Box 80.089
               3508 TB UTRECHT
               the Netherlands
               {swierstra,arthurb,andres}@cs.uu.nl -}
INCLUDE "ErrorMessages.ag"

imports
{
import ErrorMessages
import UU_Pretty
import UU_Pretty_ext
import CommonTypes
}

ATTR Errors Error       [               | | pp :{PP_Doc} ]
ATTR Errors Error       [ verbose:{Bool}| |              ]

SEM Errors
  | Nil  lhs.pp = empty
  | Cons lhs.pp = ""     >-<
                  @hd.pp >-<
                  @tl.pp

SEM Error
  | DupAlt          lhs.pp = let cl    = "warning"
                                 mesg  = wfill ["Repeated definition for alternative",@con
                                               ,"of nonterminal", @nt, "."
                                               ] >-<
                                         wfill ["First definition:", (show @occ1),"."] >-<
                                         wfill ["Other definition:", (show @occ2),"."]
                                 pat =     "DATA" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< "...")
                                       >-< indent 2 ("|" >#< @con >#< "...")

                                 help =  wfill ["The nonterminal",@nt,"has more than one alternative that"
                                               ,"is labelled with the constructor name",@con,"."
                                               ,"You should either rename or remove enough of them to make all"
                                               ,"constructors of",@nt,"uniquely named."
                                               ]

                                 act  = wfill [ "The first alternative of name",@con
                                              ,"you have given for nonterminal",@nt
                                              ,"is considered valid. All other alternatives have been discarded."
                                              ]

                             in ppError cl mesg pat help act @lhs.verbose

  | DupSynonym      lhs.pp = let cl    = "warning"
                                 mesg  = wfill ["Definition of type synonym", @nt, "clashes with another"
                                               ,"type synonym or a data definition."
                                               ] >-<
                                         wfill ["First definition:", (show @occ1),"."] >-<
                                         wfill ["Type synonym :"   , (show @occ2),"."]
                                 pat =     "DATA" >#< @nt
                                       >-< indent 2 ("|" >#< "...")
                                       >-< "TYPE" >#< @nt >#< "=" >#<  "..."
                                 help =  wfill ["A type synonym with name", @nt
                                               ,"has been given while there already is a DATA or TYPE"
                                               ,"definition with the same name."
                                               ,"You should either rename or remove the type synonym."
                                               ]
                                 act  = wfill [ "The clashing type synonym will be ignored."
                                              ]

                             in ppError cl mesg pat help act @lhs.verbose
  | DupInhAttr      lhs.pp = let cl    = "error"
                                 mesg  = wfill ["Repeated declaration of inherited attribute", @attr
                                               , "of nonterminal", @nt, "."
                                               ] >-<
                                         wfill ["First definition:", (show @occ1),"."] >-<
                                         wfill ["Other definition:", (show @occ2),"."]
                                 pat  = "ATTR" >#< @nt >#< "[" >#< @attr >|< ":...,"
                                                               >#< @attr >|< ":... | | ]"

                                 help =  wfill ["The identifier" , @attr ,"has been declared"
                                               ,"as an inherited (or chained) attribute for nonterminal"
                                               ,@nt , "more than once, with possibly different types."
                                               ,"Delete all but one or rename them to make them unique."
                                               ]
                                 act  = wfill ["One declaration with its corresponding type is considered valid."
                                              ,"All others have been discarded. The generated program will probably not run."
                                              ]

                             in ppError cl mesg pat help act @lhs.verbose
  | DupSynAttr      lhs.pp = let cl    = "error"
                                 mesg  = wfill ["Repeated declaration of synthesized attribute", @attr
                                               , "of nonterminal", @nt, "."
                                               ] >-<
                                         wfill ["First definition:", (show @occ1),"."] >-<
                                         wfill ["Other definition:", (show @occ2),"."]
                                 pat  = "ATTR" >#< @nt >#< "[ | |" >#< @attr >|< ":...,"
                                                                   >#< @attr >|< ":... ]"

                                 help =  wfill ["The identifier" , @attr ,"has been declared"
                                               ,"as a synthesized (or chained) attribute for nonterminal"
                                               ,@nt , "more than once, with possibly different types."
                                               ,"Delete all but one or rename them to make them unique."
                                               ]
                                 act  = wfill ["One declaration with its corresponding type is considered valid."
                                              ,"All others have been discarded. The generated program will probably not run."
                                              ]

                             in ppError cl mesg pat help act @lhs.verbose
  | DupChild        lhs.pp = let cl    = "warning"
                                 mesg  = wfill ["Repeated declaration for field", @name, "of alternative"
                                               ,@con, "of nonterminal", @nt, "."
                                               ] >-<
                                         wfill ["First definition:", (show @occ1),"."] >-<
                                         wfill ["Other definition:", (show @occ2),"."]
                                 pat   =   "DATA" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< (@name >|< ":..." >-< @name >|< ":..."))


                                 help =  wfill ["The alternative" , @con , "of nonterminal" , @nt
                                               ,"has more than one field that is named"
                                               , @name ++ ". Possibly they have different types."
                                               ,"You should either rename or remove enough of them to make all fields of"
                                               ,@con , "for nonterminal " , @nt , "uniquely named."
                                               ]
                                 act  = wfill ["The last declaration with its corresponding type is considered valid."
                                              ,"All others have been discarded."
                                              ]
                             in ppError cl mesg pat help act @lhs.verbose
  | DupLocal        lhs.pp = let cl    = "error"
                                 mesg  = wfill ["Repeated definition for local variable", @name, "of alternative"
                                               ,@con, "of nonterminal", @nt, "."
                                               ] {- >-<
                                         wfill ["First definition:", (show @occ1),"."] >-<
                                         wfill ["Other definition:", (show @occ2),"."]
                                                    -}
                                 pat   =   "SEM" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< "loc." >|< @name >#< "= ...")
                                       >-< indent 2 ("|" >#< @con >#< "loc." >|< @name >#< "= ...")


                                 help =  wfill ["In the rules for alternative" , @con , "of nonterminal"
                                               , @nt, ", more than one local variable with name "
                                               ,@name , "has been defined." , "You should either rename or"
                                               ,"remove enough of them to make all local variables of"
                                               , @con , "for nonterminal " , @nt , "uniquely named."
                                               ]
                                 act  = wfill ["The generated program will not run."]
                             in ppError cl mesg pat help act @lhs.verbose

  | DupRule         lhs.pp = let cl    = "error"
                                 mesg  = wfill ["At constructor",@con, "of nonterminal", @nt, "there are two or more rules for"
                                               ,showAttr @field @attr,"."
                                               ]  >-<
                                         wfill ["First rule:", (show @occ1),"."] >-<
                                         wfill ["Other rule:", (show @occ2),"."]

                                 pat   =   "SEM" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< ppAttr @field @attr >#< "= ...")
                                       >-< indent 2 ("|" >#< @con >#< ppAttr @field @attr >#< "= ...")

                                 help =  wfill ["In the rules for alternative" , @con , "of nonterminal" , @nt
                                                       ,", there is more than one rule for the" , showAttr @field @attr
                                                       ,". You should either rename or remove enough of them to make all rules for alternative"
                                                       ,@con , "of nonterminal " , @nt , "uniquely named."
                                                       ]
                                 act  = wfill ["The first rule given is considered valid. All others have been discarded."]
                             in ppError cl mesg pat help act @lhs.verbose

  | NameClash       lhs.pp = let cl    = "error"
                                 mesg  = wfill ["At constructor",@con, "of nonterminal", @nt, "local variabele", @var
                                               , "clashes with field", @var,"."
                                               ]  >-<
                                         wfill ["Field definition:", (show @occ1),"."] >-<
                                         wfill ["Local definition:", (show @occ2),"."]

                                 pat  =   "DATA" >#< @nt
                                      >-< indent 2 ("|" >#< @con >#< "..." >#< @var >|< ":...")
                                      >-< "SEM" >#< @nt
                                      >-< indent 2 ("|" >#< @con >#< "loc." >|< @var >#< "= ...")


                                 help =  wfill ["The name" , @var , "occurs as the name of a field in the definition"
                                                       , "of alternative" , @con , "of nonterminal" , @nt
                                                       ,", but also as the name of a local variable defined for this alternative."
                                                       ,"Since both field names and local variables are sharing one namespace, this results"
                                                       ,"in a name clash. You should remove or rename either the field or the local variable."
                                                       ]
                                 act  = wfill ["The generated program will not run."]
                             in ppError cl mesg pat help act @lhs.verbose

  | UndefNont       lhs.pp = let cl    = "warning"
                                 mesg  = wfill ["Nonterminal", @nt, "is not defined."
                                               ]  >-<
                                         wfill ["Location:", show @pos,"."]
                                 pat   = "DATA" >#< @nt >#< "..."

                                 help =  wfill ["There are attributes and/or rules for nonterminal" , @nt ++ ", but there is no definition"
                                                       , "for" , @nt ++ ". Maybe you misspelled it? Otherwise insert a definition."
                                                       ]
                                 act  = wfill ["Everything regarding the unknown nonterminal has been ignored."]
                             in ppError cl mesg pat help act @lhs.verbose

  | UndefAlt        lhs.pp = let cl    = "warning"
                                 mesg  = wfill ["Constructor", @con, "of nonterminal" ,@nt, "is  not defined."
                                               ]  >-<
                                         wfill ["Location:", (show @pos),"."]
                                 pat   =   "DATA" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< "...")

                                 help =  wfill ["There are rules for alternative" , @con , "of nonterminal" , @nt
                                                       ,", but there is no definition for this alternative in the definitions of the"
                                                       ,"nonterminal" , @nt ++". Maybe you misspelled it? Otherwise insert a definition."
                                                       ]
                                 act  = wfill ["All rules for the unknown alternative have been ignored."]
                             in ppError cl mesg pat help act @lhs.verbose

  | UndefChild      lhs.pp = let cl    = "warning"
                                 mesg  = wfill ["Constructor", @con, "of nonterminal" ,@nt
                                               , "does not have a field named", @name , "."
                                               ]  >-<
                                         wfill ["Location:", (show @pos),"."]
                                 pat   =   "DATA" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< "..." >#< @name >|< ":...")

                                 help =  wfill ["There are rules that define inherited attributes of field" , @name
                                                       ,"in alternative" , @con , "of nonterminal" , @nt
                                                       ,", but this field does not exist in the definition of the alternative."
                                                       ,"Maybe you misspelled it? Otherwise insert the field into the definition."
                                                       ]
                                 act  = wfill ["All rules for the unknown field have been ignored."]
                             in ppError cl mesg pat help act @lhs.verbose

  | MissingRule     lhs.pp = let cl    = "warning"
                                 mesg  = wfill ["Missing rule for", showAttr @field @attr , "in alternative"
                                               , @con , "of nonterminal",@nt ,"."
                                               ]
                                    --     wfill ["Location:", (show @pos),"."]
                                 pat   =   "SEM" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< ppAttr @field @attr >#< "= ...")

                                 help  = wfill ["The", showAttr @field @attr, "in alternative", @con
                                               , "of nonterminal", @nt, "is missing and cannot be inferred"
                                               ,"by a copy rule, so you should add an appropriate rule."
                                               ]
                                 act  = wfill ["The value of the attribute has been set to undefined."]
                             in ppError cl mesg pat help act @lhs.verbose

  | SuperfluousRule lhs.pp = let cl    = "warning"
                                 mesg  = wfill ["Rule for non-existing", showAttr @field @attr , "at alternative"
                                               , @con , "of nonterminal",@nt, "."
                                               ]  >-<
                                         wfill ["Location:", (show @pos),"."]
                                 pat   =   "SEM" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< ppAttr @field @attr >#< "= ...")


                                 help =  wfill ["There is a rule for" , showAttr @field @attr , "in the definitions for alternative" , @con
                                               ,"of nonterminal" , @nt ++ ", but this attribute does not exist. Maybe you misspelled it?"
                                               ,"Otherwise either remove the rule or add an appropriate attribute definition."
                                               ]
                                 act  = wfill ["The rule has been ignored."]
                             in ppError cl mesg pat help act @lhs.verbose
  | UndefLocal      lhs.pp = let cl    = "error"
                                 mesg  = wfill ["Undefined local variable or field", @var, "at constructor"
                                               , @con , "of nonterminal",@nt, "."
                                               ]  >-<
                                         wfill ["Location:", (show @pos),"."]
                                 pat   = "SEM" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< "<field>.<attr> = "
                                                         >#< "..." >#< @var >#< "..." )

                                 help =  wfill ["A rule in the definitions for alternative" , @con ,"of nonterminal"
                                               , @nt , "contains a local variable or field name that is not defined"
                                               ,"Maybe you misspelled it?"
                                               ,"Otherwise either remove the rule or add an appropriate definition."
                                               ]
                                 act  = wfill ["The generated program will not run."]
                             in ppError cl mesg pat help act @lhs.verbose
  | UndefAttr       lhs.pp = let cl    = "error"
                                 mesg  = wfill ["Undefined", showAttr @field @attr, "at constructor"
                                               , @con , "of nonterminal",@nt, "."
                                               ]  >-<
                                         wfill ["Location:", (show @pos),"."]
                                 pat   = "SEM" >#< @nt
                                       >-< indent 2 ("|" >#< @con >#< "<field>.<attr> = "
                                                         >#< "..." >#< ppAttr @field @attr >#< "...")

                                 help =  wfill ["A rule in the definitions for alternative" , @con ,"of nonterminal"
                                               , @nt , "contains an attribute that is not defined"
                                               ,"Maybe you misspelled it?"
                                               ,"Otherwise either remove the rule or add an appropriate attribute definition."
                                               ]
                                 act  = wfill ["The generated program will not run."]
                             in ppError cl mesg pat help act @lhs.verbose

  | CustomError     lhs.pp = let cl    = "error"
                                 pat   =  text "unknown"
                                 help = wfill ["not available."]
                                 act  = wfill ["unknown"]
                             in ppError cl @mesg pat help act False


{
showAttr f a | f == _LHS = "synthesized attribute " ++ a
             | otherwise = "inherited attribute " ++ a ++ " of field " ++ f

ppAttr f a = text (f++"."++a)
}
-- Printing of error messages

{
infixr 5 +#+
(+#+) :: String -> String -> String
(+#+) s t = s ++ " " ++ t


wfill = fill . addSpaces. concat . map words
  where addSpaces (x:xs) = x:map addSpace xs
        addSpaces []     = []
        addSpace  [x]    | x `elem` ".,;:!?" = [x]
        addSpace  xs     = ' ':xs

ppError :: String         -- class of the error, should be either error or warning
        -> PP_Doc         -- error message
        -> PP_Doc         -- pattern
        -> PP_Doc         -- help, more info
        -> PP_Doc         -- action taken by AG
        -> Bool           -- verbose? show help and action?
        -> PP_Doc
ppError cl mesg pat hlp act verbose
  = let
      errorClass = "*** UU_AG" >#< cl >#< "***"
      message    = "ERROR    :" >#< mesg
      pattern    = "pattern  :" >#< pat
      help       = "help     :" >#< hlp
      action     = "action   :" >#< act
    in
      if verbose
         then vlist [errorClass,message,pattern,help,action]
         else vlist [errorClass,message]
}
