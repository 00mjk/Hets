# Makefile for a Release
# $Header$
# Author: (c) Christian Maeder, Uni Bremen 2002-2004
# Year:   2004

# This Makefile will compile the hets sources
# note that you'll need the "uni" library residing in ".." 
# from http://www.informatik.uni-bremen.de/~ger/cvs/CVS.html

####################################################################
## Some varibles, which control the compilation

INCLUDE_PATH = hxt

HC = ghc
HC_INCLUDE = -i$(INCLUDE_PATH)

# check for the "uni" library
UNI_PACKAGE_CONF := $(wildcard ../uni/uni-package.conf)
ifneq ($(strip $(UNI_PACKAGE_CONF)),)
HC_PACKAGE = -package-conf $(UNI_PACKAGE_CONF) -package uni-davinci \
             -package uni-server -DUNI_PACKAGE
endif

# check for programatica
PFE_TOOLDIR := $(wildcard ../programatica/tools)
ifneq ($(strip $(PFE_TOOLDIR)),)
PFE_DIRS = base/AST base/TI base/parse2 base/parse2/Lexer base/parse2/Parser \
    base/parse2/LexerGen base/parse2/LexerSpec base/tests/HbcLibraries \
    base/pretty base/syntax base/lib base/lib/Monads base/Modules base/defs \
    base/transforms base/transforms/Deriving property \
    property/syntax property/AST property/transforms \
    property/TI property/defs property/parse2 property/parse2/Parser
PFE_PATH = $(addprefix -i$(PFE_TOOLDIR)/, $(PFE_DIRS))
PFE_FLAGS = -package data -package text $(PFE_PATH) -DPROGRAMATICA \
            -fno-monomorphism-restriction -fallow-undecidable-instances
endif

# OPTS without uni packages
HC_OPTS1 = -fglasgow-exts -fallow-overlapping-instances \
    $(HC_INCLUDE) $(PFE_FLAGS) -DCASLEXTENSIONS

HC_OPTS = $(HC_OPTS1) $(HC_PACKAGE)

####################################################################
### targets
.PHONY : all clean o_clean bin_clean critical_clean

all: hets

hets: critical_clean
	$(HC) --make -O -optc-O1 -o $@ hets.hs $(HC_OPTS) -w
	strip hets

hets.cgi: critical_clean
	$(HC) --make -O -optc-O1 GUI/hets_cgi.hs -o $@ $(HC_OPTS1) -w
	strip hets.cgi


###############
### clean up

### remove binaries
bin_clean: 
	$(RM) hets hets.cgi

### remove *.hi and *.o
o_clean: 
	find . -name \*.o -o -name \*.hi | xargs $(RM) -r

# cleaning needed due to recompilation problem with and without uni
critical_clean: 
	$(RM) ATC/AS_Structured.o ATC/AS_Architecture.o ATC/AS_Library.o \
	     Isabelle/Logic_Isabelle.o SPASS/Logic_SPASS.o \
             Driver/WriteFn.o GUI/Utils.o GUI/ShowGraph.o

clean: o_clean bin_clean 
