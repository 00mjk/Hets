module Casl-BasicItems

%% written/changed by Bjarke Wedemeijer (January 1998)
%% adapted by Mark van den Brand (Juni 1999)
%% adapted by Mark van den Brand (November 2000)

imports Casl-Lexical Casl-Annotations
exports
  sorts
    Basic-Item Basic-Spec Sig-Items Var-Decl Datatype-Decl
    Formula Sort-Item Op-Item Pred-Item Op-Type Op-Attr Op-Head
    Term Terms Some-Sorts Arg-Decl Pred-Type Pred-Head
    Alternative Component Quantifier Formula-1 Formula-2 Formula-3
    MixFix QualPredName QualVarName QualOpName Atom Op-Name 
    Pred-Name Formula-2-or Labelled-Op-Item Labelled-Pred-Item
    Formula-2-and Labelled-Formula LabelAnnot Var-S Axiom-S
    Sort-S Op-S Pred-S Datatype-S Opt-Semi

  context-free syntax

%% Basic-Items section
    "{" "}"     -> Basic-Spec
    Basic-Item+ -> Basic-Spec
 
    Sig-Items                                            -> Basic-Item
    "free" Datatype-S {Datatype-Decl ";"}+ Opt-Semi      -> Basic-Item
    "generated" Datatype-S {Datatype-Decl ";"}+ Opt-Semi -> Basic-Item 
    "generated" "{" Sig-Items+ "}" Opt-Semi              -> Basic-Item 
    Var-S {Var-Decl ";"}+ Opt-Semi                       -> Basic-Item
    Var-S {Var-Decl ";"}+ "." 
      {Labelled-Formula "."}+ Opt-Semi                   -> Basic-Item
    Axiom-S {Labelled-Formula ";"}+ Opt-Semi             -> Basic-Item 

%% Sig-Items
    Sort-S {Sort-Item ";"}+ Opt-Semi Annote*          -> Sig-Items
    Op-S {Labelled-Op-Item ";"}+ Opt-Semi Annote*     -> Sig-Items
    Pred-S {Labelled-Pred-Item ";"}+ Opt-Semi Annote* -> Sig-Items
    Datatype-S {Datatype-Decl ";"}+ Opt-Semi Annote*  -> Sig-Items

%% Labelled-Op-Item
  Op-Item            -> Labelled-Op-Item
  LabelAnnot Op-Item -> Labelled-Op-Item
  Op-Item AssocAnnot -> Labelled-Op-Item
  Op-Item Label      -> Labelled-Op-Item

%% AssocAnnot
  "%left" "assoc"  -> AssocAnnot
  "%right" "assoc" -> AssocAnnot

%% Annotations
  "%(" Words ")%"               -> Label
  "%floating" TextLine          -> AnnoteLine
  "%number" TextLine            -> AnnoteLine
  "%string" TextLine            -> AnnoteLine
  "%list" TextLine              -> AnnoteLine
  "%prec" TextLine              -> AnnoteLine
  "%prec(" TextLines ")%"       -> AnnoteGroup
  "%left_assoc" TextLine        -> AnnoteLine
  "%left_assoc(" TextLine ")%"  -> AnnoteGroup
  "%right_assoc" TextLine       -> AnnoteLine
  "%right_assoc(" TextLine ")%" -> AnnoteGroup

%% Sort-Item
    {Sort ","}+                               -> Sort-Item
    {Sort ","}+ "<" Sort                      -> Sort-Item
    Sort "=" "{" Var ":" Sort "." Formula "}" -> Sort-Item
    Sort "=" {Sort "="}+                      -> Sort-Item

%% Op-Item 
    {Op-Name ","}+ ":" Op-Type                    -> Op-Item
    {Op-Name ","}+ ":" Op-Type "," {Op-Attr ","}+ -> Op-Item 
    Op-Name Op-Head "=" Term                      -> Op-Item

%% Op-Type
    Some-Sorts "->" Sort  -> Op-Type
    Sort                  -> Op-Type
    Some-Sorts "->?" Sort -> Op-Type
    "?" Sort              -> Op-Type

%% Sorts
    {Sort "*"}+ -> Some-Sorts

%% Op-Attr
    "assoc"                 -> Op-Attr
    "comm"                  -> Op-Attr
    "idem"                  -> Op-Attr
    "unit" Term             -> Op-Attr

%% Op-Head
    "(" {Arg-Decl ";"}+ ")" ":" Sort  -> Op-Head
    ":" Sort                          -> Op-Head
    "(" {Arg-Decl ";"}+ ")" ":?" Sort -> Op-Head
    ":?" Sort                         -> Op-Head

%% Arg-Decl
    {Var ","}+ ":" Sort -> Arg-Decl



%% Labelled-Pred-Item
  Pred-Item            -> Labelled-Pred-Item
  LabelAnnot Pred-Item -> Labelled-Pred-Item
  Pred-Item Label      -> Labelled-Pred-Item

%% Pred-Item
    {Pred-Name ","}+ ":" Pred-Type    -> Pred-Item
    Pred-Name Pred-Head "<=>" Formula -> Pred-Item
    Pred-Name "<=>" Formula           -> Pred-Item

%% Pred-Type
    Some-Sorts -> Pred-Type
    "(" ")"    -> Pred-Type

%% Pred-Head
    "(" {Arg-Decl ";"}+ ")" -> Pred-Head

%% Datatype-Decl
    Sort "::=" {Alternative "|"}+ -> Datatype-Decl

%% Alternative
    Op-Name"(" {Component ";"}+ ")"     -> Alternative
    Op-Name"(" {Component ";"}+ ")" "?" -> Alternative
    Op-Name                             -> Alternative
    Sort-S {Sort ","}+                  -> Alternative

%% Component
    {Op-Name ","}+ ":" Sort  -> Component
    {Op-Name ","}+ ":?" Sort -> Component
    Sort                     -> Component

%% Var-Decl
    {Var ","}+  ":" Sort -> Var-Decl

%% Labelled-Formula
   Formula            -> Labelled-Formula
   Formula Label      -> Labelled-Formula
   LabelAnnot Formula -> Labelled-Formula

%% LabelAnnot
   "%[" Words "]" -> LabelAnnot

%% Var-S
    "var"  -> Var-S
    "vars" -> Var-S

%% Axiom-S
    "axiom"  -> Axiom-S
    "axioms" -> Axiom-S

%% Sort-S
    "sort"  -> Sort-S
    "sorts" -> Sort-S

%% Op-S
    "op"  -> Op-S
    "ops" -> Op-S

%% Pred-S
    "pred"  -> Pred-S
    "preds" -> Pred-S

%% Datatype-S
    "type"  -> Datatype-S
    "types" -> Datatype-S

%% Opt-Semi
                        -> Opt-Semi
    ";"                 -> Opt-Semi

%% Formula
    Formula-1 -> Formula
    Formula-2 -> Formula-1
    Formula-3 -> Formula-2
    Atom      -> Formula-3

    Quantifier {Var-Decl ";"}+ "." Formula -> Formula-2
    Formula-3 "/\\" Formula-2-and          -> Formula-2
    Formula-3 "\\/" Formula-2-or           -> Formula-2 

    Formula-3                              -> Formula-2-and  
    Quantifier {Var-Decl ";"}+ "." Formula -> Formula-2-and
    Formula-3 "/\\" Formula-2-and          -> Formula-2-and 

    Formula-3                              -> Formula-2-or  
    Quantifier {Var-Decl ";"}+ "." Formula -> Formula-2-or 
    Formula-3 "\\/" Formula-2-or           -> Formula-2-or

    Formula-3 "=>" Formula-2                     -> Formula-1
    Formula-3 "if" Formula-2                     -> Formula-1 
    Formula-3 "/\\" Formula-2-and "=>" Formula-2 -> Formula-1
    Formula-3 "/\\" Formula-2-and "if" Formula-2 -> Formula-1
    Formula-3 "\\/" Formula-2-or "=>" Formula-2  -> Formula-1
    Formula-3 "\\/" Formula-2-or "if" Formula-2  -> Formula-1
    Formula-3 "<=>" Formula-2                    -> Formula-1

    "not" Formula-3 -> Formula-3
    "(" Formula ")" -> Formula-3

    "true"                          -> Atom
    "false"                         -> Atom
    "def" Term                      -> Atom
    Term "=e=" Term                 -> Atom
    Term "=" Term                   -> Atom
    Term "in" Sort                  -> Atom 
    MixFix+                         -> Atom {prefer}

%% Quantifier
    "forall"     -> Quantifier
    "exists"     -> Quantifier
    "exists" "!" -> Quantifier


%% Terms
    {Term ","}+ -> Terms

%% Term
    MixFix+     -> Term
    Literal     -> Term

%% MixFix
    NoBracketToken                      -> MixFix
    Place                               -> MixFix
    QualPredName                        -> MixFix
    QualVarName                         -> MixFix
    QualOpName                          -> MixFix
    MixFix ":" Sort                     -> MixFix {avoid}
    MixFix "as" Sort                    -> MixFix
    MixFix "when" Formula "else" MixFix -> MixFix {right}
    "(" Terms ")"                       -> MixFix
    "[" Terms "]"                       -> MixFix
    "[" "]"                             -> MixFix
    "{" Terms "}"                       -> MixFix
    "{" "}"                             -> MixFix 

%% QualPredName 
    "(" "pred" Pred-Name ":" Pred-Type ")" -> QualPredName

%% QualVarName
    "(" "var" Var ":" Sort ")"          -> QualVarName

%% QualOpName
    "(" "op"  Op-Name ":" Op-Type ")"   -> QualOpName

%% Various small definitions
    Token-Id  -> Sort

    Id        -> Op-Name

    Id        -> Pred-Name

    Simple-Id -> Var

  context-free priorities
    Literal     -> Term >
    MixFix+     -> Term
